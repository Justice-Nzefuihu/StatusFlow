"""removed email, link and added phone, country, profile to user table and added number of status, is_text to status table

Revision ID: a286c996e4e6
Revises: f0ee9f6d17ef
Create Date: 2025-07-22 09:23:08.989087

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a286c996e4e6'
down_revision: Union[str, Sequence[str], None] = 'f0ee9f6d17ef'
branch_labels: Union[str, Sequence[str], None] = ('first modification of user and status tables',)
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('statuses', sa.Column('is_text', sa.Boolean(), nullable=False))
    op.add_column('statuses', sa.Column('number', sa.Integer(), nullable=False))
    op.add_column('users', sa.Column('phone', sa.String(), nullable=False))
    op.add_column('users', sa.Column('country', sa.String(), nullable=False))
    op.add_column('users', sa.Column('profile', sa.String(), nullable=False))
    op.drop_constraint(op.f('users_email_key'), 'users', type_='unique')
    op.drop_constraint(op.f('users_link_key'), 'users', type_='unique')
    op.create_unique_constraint(None, 'users', ['profile'])
    op.create_unique_constraint(None, 'users', ['phone'])
    op.drop_column('users', 'email')
    op.drop_column('users', 'link')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('link', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('users', sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'users', type_='unique')
    op.drop_constraint(None, 'users', type_='unique')
    op.create_unique_constraint(op.f('users_link_key'), 'users', ['link'], postgresql_nulls_not_distinct=False)
    op.create_unique_constraint(op.f('users_email_key'), 'users', ['email'], postgresql_nulls_not_distinct=False)
    op.drop_column('users', 'profile')
    op.drop_column('users', 'country')
    op.drop_column('users', 'phone')
    op.drop_column('statuses', 'number')
    op.drop_column('statuses', 'is_text')
    # ### end Alembic commands ###
